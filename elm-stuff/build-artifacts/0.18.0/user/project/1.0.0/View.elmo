var _user$project$View$directionString = function (direction) {
	var _p0 = direction;
	if (_p0.ctor === 'Inbound') {
		return 'To Boston';
	} else {
		return 'From Boston';
	}
};
var _user$project$View$scheduleOrLoading = F2(
	function (model, loadableSchedule) {
		var _p1 = loadableSchedule;
		if (_p1.ctor === 'Loading') {
			return A2(
				_elm_native_ui$elm_native_ui$NativeUi_Elements$view,
				{ctor: '[]'},
				{ctor: '[]'});
		} else {
			return A2(_user$project$Schedule_View$view, model, _p1._0);
		}
	});
var _user$project$View$topSection = F3(
	function (model, direction, loadableSchedule) {
		return A2(
			_elm_native_ui$elm_native_ui$NativeUi_Elements$view,
			{
				ctor: '::',
				_0: _elm_native_ui$elm_native_ui$NativeUi$style(
					{
						ctor: '::',
						_0: _elm_native_ui$elm_native_ui$NativeUi_Style$flex(1),
						_1: {
							ctor: '::',
							_0: _elm_native_ui$elm_native_ui$NativeUi_Style$flexDirection('column'),
							_1: {
								ctor: '::',
								_0: _elm_native_ui$elm_native_ui$NativeUi_Style$alignSelf('stretch'),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_native_ui$elm_native_ui$NativeUi$property,
						'tabLabel',
						_elm_lang$core$Json_Encode$string(
							_user$project$View$directionString(direction))),
					_1: {
						ctor: '::',
						_0: _elm_native_ui$elm_native_ui$NativeUi_Properties$key(
							_elm_lang$core$Basics$toString(direction)),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(_user$project$View$scheduleOrLoading, model, loadableSchedule),
				_1: {ctor: '[]'}
			});
	});
var _user$project$View$welcomeScreen = A2(
	_elm_native_ui$elm_native_ui$NativeUi_Elements$text,
	{
		ctor: '::',
		_0: _elm_native_ui$elm_native_ui$NativeUi$style(
			{
				ctor: '::',
				_0: _elm_native_ui$elm_native_ui$NativeUi_Style$color('#301d41'),
				_1: {
					ctor: '::',
					_0: _elm_native_ui$elm_native_ui$NativeUi_Style$fontFamily(_user$project$App_Font$hkCompakt),
					_1: {
						ctor: '::',
						_0: _elm_native_ui$elm_native_ui$NativeUi_Style$textAlign('center'),
						_1: {
							ctor: '::',
							_0: _elm_native_ui$elm_native_ui$NativeUi_Style$fontWeight('800'),
							_1: {
								ctor: '::',
								_0: _elm_native_ui$elm_native_ui$NativeUi_Style$marginTop(60),
								_1: {
									ctor: '::',
									_0: _elm_native_ui$elm_native_ui$NativeUi_Style$fontSize(48),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: _elm_native_ui$elm_native_ui$NativeUi$string('Purple Train'),
		_1: {ctor: '[]'}
	});
var _user$project$View$mainView = function (model) {
	var _p2 = model.selectedRouteStop;
	if (_p2.ctor === 'Nothing') {
		return {
			ctor: '::',
			_0: _user$project$View$welcomeScreen,
			_1: {
				ctor: '::',
				_0: _user$project$StopPickerButton_View$view(model),
				_1: {ctor: '[]'}
			}
		};
	} else {
		return {
			ctor: '::',
			_0: _user$project$DirectionPicker_View$view(
				{
					ctor: '::',
					_0: A3(_user$project$View$topSection, model, _user$project$Types$Inbound, model.inboundSchedule),
					_1: {
						ctor: '::',
						_0: A3(_user$project$View$topSection, model, _user$project$Types$Outbound, model.outboundSchedule),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: _user$project$StopPickerButton_View$view(model),
				_1: {ctor: '[]'}
			}
		};
	}
};
var _user$project$View$view = function (model) {
	return A2(
		_elm_native_ui$elm_native_ui$NativeUi_Elements$view,
		{
			ctor: '::',
			_0: _elm_native_ui$elm_native_ui$NativeUi$style(
				{
					ctor: '::',
					_0: _elm_native_ui$elm_native_ui$NativeUi_Style$flex(1),
					_1: {
						ctor: '::',
						_0: _elm_native_ui$elm_native_ui$NativeUi_Style$flexDirection('column'),
						_1: {
							ctor: '::',
							_0: _elm_native_ui$elm_native_ui$NativeUi_Style$justifyContent('space-between'),
							_1: {
								ctor: '::',
								_0: _elm_native_ui$elm_native_ui$NativeUi_Style$alignItems('center'),
								_1: {
									ctor: '::',
									_0: _elm_native_ui$elm_native_ui$NativeUi_Style$backgroundColor(_user$project$App_Color$darkPurple),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		_user$project$View$mainView(model));
};
