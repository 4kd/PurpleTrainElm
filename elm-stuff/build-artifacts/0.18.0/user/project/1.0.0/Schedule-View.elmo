var _user$project$Schedule_View$predictionColor = function (minutesLate) {
	var _p0 = minutesLate;
	if (_p0.ctor === 'Nothing') {
		return _user$project$App_Color$darkPurple;
	} else {
		return _user$project$App_Color$red;
	}
};
var _user$project$Schedule_View$prettyDurationUnit = F2(
	function (amount, unit) {
		return (_elm_lang$core$Native_Utils.cmp(amount, 0) > 0) ? _elm_lang$core$Maybe$Just(
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(amount),
				unit)) : _elm_lang$core$Maybe$Nothing;
	});
var _user$project$Schedule_View$predictedMinutesLate = function (_p1) {
	var _p2 = _p1;
	return A2(_user$project$Schedule_View$prettyDurationUnit, _p2.minute, 'm late,');
};
var _user$project$Schedule_View$catMaybes = _elm_lang$core$List$filterMap(_elm_lang$core$Basics$identity);
var _user$project$Schedule_View$joinMaybe = function (_p3) {
	return A2(
		_elm_lang$core$String$join,
		' ',
		_user$project$Schedule_View$catMaybes(_p3));
};
var _user$project$Schedule_View$prettyDuration = function (_p4) {
	var _p5 = _p4;
	var _p10 = _p5.year;
	var _p9 = _p5.month;
	var _p8 = _p5.minute;
	var _p7 = _p5.hour;
	var _p6 = _p5.day;
	var unitSum = (((_p10 + _p9) + _p6) + _p7) + _p8;
	return (_elm_lang$core$Native_Utils.cmp(unitSum, 0) < 0) ? 'departed' : (_elm_lang$core$Native_Utils.eq(unitSum, 0) ? 'departing now' : ((_elm_lang$core$Native_Utils.cmp((_p10 + _p9) + _p6, 0) > 0) ? 'departs in more than a day' : _user$project$Schedule_View$joinMaybe(
		{
			ctor: '::',
			_0: _elm_lang$core$Maybe$Just('departs in'),
			_1: {
				ctor: '::',
				_0: A2(_user$project$Schedule_View$prettyDurationUnit, _p7, 'h'),
				_1: {
					ctor: '::',
					_0: A2(_user$project$Schedule_View$prettyDurationUnit, _p8, 'm'),
					_1: {ctor: '[]'}
				}
			}
		})));
};
var _user$project$Schedule_View$predictionText = F3(
	function (now, minutesLate, predictedDeparture) {
		return _user$project$Schedule_View$joinMaybe(
			{
				ctor: '::',
				_0: minutesLate,
				_1: {
					ctor: '::',
					_0: _elm_lang$core$Maybe$Just(
						_user$project$Schedule_View$prettyDuration(
							A2(_rluiten$elm_date_extra$Date_Extra_Duration$diff, predictedDeparture, now))),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Schedule_View$prediction = F3(
	function (now, predictedDeparture, scheduledDeparture) {
		var predictionDiff = A2(_rluiten$elm_date_extra$Date_Extra_Duration$diff, predictedDeparture, scheduledDeparture);
		var minutesLate = _user$project$Schedule_View$predictedMinutesLate(predictionDiff);
		var displayedDeparture = _elm_lang$core$Native_Utils.eq(minutesLate, _elm_lang$core$Maybe$Nothing) ? scheduledDeparture : predictedDeparture;
		return A2(
			_elm_native_ui$elm_native_ui$NativeUi_Elements$text,
			{
				ctor: '::',
				_0: _elm_native_ui$elm_native_ui$NativeUi$style(
					{
						ctor: '::',
						_0: _elm_native_ui$elm_native_ui$NativeUi_Style$color(
							_user$project$Schedule_View$predictionColor(minutesLate)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_native_ui$elm_native_ui$NativeUi$string(
					A3(_user$project$Schedule_View$predictionText, now, minutesLate, displayedDeparture)),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Schedule_View$maybePrediction = F2(
	function (now, model) {
		var _p11 = model.predictedDeparture;
		if (_p11.ctor === 'Nothing') {
			return A2(
				_elm_native_ui$elm_native_ui$NativeUi_Elements$view,
				{ctor: '[]'},
				{ctor: '[]'});
		} else {
			return A3(_user$project$Schedule_View$prediction, now, _p11._0, model.scheduledDeparture);
		}
	});
var _user$project$Schedule_View$trainElement = F2(
	function (now, train) {
		return A2(
			_elm_native_ui$elm_native_ui$NativeUi_Elements$view,
			{
				ctor: '::',
				_0: _elm_native_ui$elm_native_ui$NativeUi$style(
					{
						ctor: '::',
						_0: _elm_native_ui$elm_native_ui$NativeUi_Style$flexDirection('row'),
						_1: {
							ctor: '::',
							_0: _elm_native_ui$elm_native_ui$NativeUi_Style$alignItems('center'),
							_1: {
								ctor: '::',
								_0: _elm_native_ui$elm_native_ui$NativeUi_Style$justifyContent('space-between'),
								_1: {
									ctor: '::',
									_0: _elm_native_ui$elm_native_ui$NativeUi_Style$backgroundColor('white'),
									_1: {
										ctor: '::',
										_0: _elm_native_ui$elm_native_ui$NativeUi_Style$padding(20),
										_1: {
											ctor: '::',
											_0: _elm_native_ui$elm_native_ui$NativeUi_Style$borderBottomWidth(1),
											_1: {
												ctor: '::',
												_0: _elm_native_ui$elm_native_ui$NativeUi_Style$borderColor(_user$project$App_Color$lightGray),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_native_ui$elm_native_ui$NativeUi_Elements$text,
					{
						ctor: '::',
						_0: _elm_native_ui$elm_native_ui$NativeUi$style(
							{
								ctor: '::',
								_0: _elm_native_ui$elm_native_ui$NativeUi_Style$color(_user$project$App_Color$darkPurple),
								_1: {
									ctor: '::',
									_0: _elm_native_ui$elm_native_ui$NativeUi_Style$fontSize(36),
									_1: {
										ctor: '::',
										_0: _elm_native_ui$elm_native_ui$NativeUi_Style$fontWeight('400'),
										_1: {
											ctor: '::',
											_0: _elm_native_ui$elm_native_ui$NativeUi_Style$marginBottom(-1),
											_1: {
												ctor: '::',
												_0: _elm_native_ui$elm_native_ui$NativeUi_Style$fontFamily(_user$project$App_Font$roboto),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_native_ui$elm_native_ui$NativeUi$string(
							_user$project$Model$prettyTime(train.scheduledDeparture)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(_user$project$Schedule_View$maybePrediction, now, train),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Schedule_View$view = F2(
	function (_p12, schedule) {
		var _p13 = _p12;
		return A2(
			_elm_native_ui$elm_native_ui$NativeUi_Elements$view,
			{
				ctor: '::',
				_0: _elm_native_ui$elm_native_ui$NativeUi$style(
					{
						ctor: '::',
						_0: _elm_native_ui$elm_native_ui$NativeUi_Style$alignSelf('stretch'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$append,
				{
					ctor: '::',
					_0: A2(
						_elm_native_ui$elm_native_ui$NativeUi_Elements$text,
						{
							ctor: '::',
							_0: _elm_native_ui$elm_native_ui$NativeUi$style(
								{
									ctor: '::',
									_0: _elm_native_ui$elm_native_ui$NativeUi_Style$backgroundColor(_user$project$App_Color$white),
									_1: {
										ctor: '::',
										_0: _elm_native_ui$elm_native_ui$NativeUi_Style$color('#9F8AB3'),
										_1: {
											ctor: '::',
											_0: _elm_native_ui$elm_native_ui$NativeUi_Style$fontSize(9),
											_1: {
												ctor: '::',
												_0: _elm_native_ui$elm_native_ui$NativeUi_Style$fontWeight('700'),
												_1: {
													ctor: '::',
													_0: _elm_native_ui$elm_native_ui$NativeUi_Style$letterSpacing(0.25),
													_1: {
														ctor: '::',
														_0: _elm_native_ui$elm_native_ui$NativeUi_Style$paddingTop(18),
														_1: {
															ctor: '::',
															_0: _elm_native_ui$elm_native_ui$NativeUi_Style$textAlign('center'),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_native_ui$elm_native_ui$NativeUi$string('UPCOMING'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				},
				A2(
					_elm_lang$core$List$map,
					_user$project$Schedule_View$trainElement(_p13.now),
					schedule)));
	});
